//@version=5
indicator("Advanced Bid Ask Usage Example", shorttitle="BidAsk Advanced", overlay=false)

// ============================================================================
// РАСШИРЕННЫЙ ПРИМЕР ИСПОЛЬЗОВАНИЯ BID/ASK ИНДИКАТОРА
// ============================================================================

// Настройки
group_main = "Основные настройки"
vol_period = input.int(20, "Период для расчета волатильности", minval=5, maxval=100, group=group_main)
smooth_period = input.int(3, "Период сглаживания", minval=1, maxval=10, group=group_main)
ma_period = input.int(20, "Период скользящей средней", minval=5, maxval=50, group=group_main)

group_display = "Отображение"
show_bid_ask = input.bool(true, "Показать bid/ask", group=group_display)
show_spread = input.bool(true, "Показать спред", group=group_display)
show_ma = input.bool(true, "Показать MA", group=group_display)
show_bands = input.bool(true, "Показать полосы", group=group_display)

group_alerts = "Алерты"
enable_alerts = input.bool(true, "Включить алерты", group=group_alerts)
alert_threshold = input.float(1.5, "Порог алерта (%)", minval=0.1, maxval=5.0, group=group_alerts)

// ============================================================================
// РАСЧЕТ ДАННЫХ
// ============================================================================

// Получение уровня волатильности
vol_level = f_get_volatility_level(vol_period)

// Расчет bid/ask с учетом волатильности
bid_price = f_get_bid_price(close, vol_level)
ask_price = f_get_ask_price(close, vol_level)

// Сглаживание
bid_smooth = f_smooth_bid(bid_price, smooth_period)
ask_smooth = f_smooth_ask(ask_price, smooth_period)

// Расчет спреда
spread_percent = f_get_spread_percent(bid_smooth, ask_smooth, close)
spread_ma = f_get_spread_ma(spread_percent, ma_period)
spread_std = f_get_spread_std(spread_percent, ma_period)

// Дополнительные расчеты
spread_upper = spread_ma + 2 * spread_std
spread_lower = spread_ma - 2 * spread_std
spread_cv = f_get_spread_cv(spread_percent, ma_period)

// Определение типа спреда
spread_type = f_get_spread_type(spread_percent, spread_ma, spread_std)
is_anomaly = f_is_spread_anomaly(spread_percent, spread_ma, spread_std, 2.0)

// ============================================================================
// ОТОБРАЖЕНИЕ
// ============================================================================

// Основные графики
plot(show_spread ? spread_percent : na, "Spread %", color=f_get_spread_color(spread_percent, spread_ma, spread_std), linewidth=2)
plot(show_ma ? spread_ma : na, "Spread MA", color=color.blue, linewidth=1)

// Полосы волатильности
upper_band = plot(show_bands ? spread_upper : na, "Upper Band", color=color.new(color.red, 70), linewidth=1)
lower_band = plot(show_bands ? spread_lower : na, "Lower Band", color=color.new(color.green, 70), linewidth=1)
fill(upper_band, lower_band, color=color.new(color.gray, 90), title="Spread Range")

// Сигналы
plotshape(is_anomaly, "Anomaly", shape.triangleup, location.belowbar, color=color.orange, size=size.small)
plotshape(spread_type == "WIDE", "Wide Spread", shape.xcross, location.abovebar, color=color.red, size=size.small)
plotshape(spread_type == "TIGHT", "Tight Spread", shape.xcross, location.belowbar, color=color.green, size=size.small)

// Горизонтальные линии
hline(0, "Zero", color=color.gray, linestyle=hline.style_dashed)
hline(spread_ma, "MA Line", color=color.blue, linestyle=hline.style_dotted)

// Фон
bgcolor(spread_type == "WIDE" ? color.new(color.red, 95) : 
         spread_type == "TIGHT" ? color.new(color.green, 95) : na, 
         title="Spread Background")

// ============================================================================
// АЛЕРТЫ
// ============================================================================

if enable_alerts
    // Алерт на аномалии
    if is_anomaly
        alert("Аномальный спред: " + str.format("{0,number,#.##}%", spread_percent), alert.freq_once_per_bar)
    
    // Алерт на превышение порога
    if f_check_spread_alert(spread_percent, alert_threshold, "ABOVE")
        alert(f_generate_alert_text(spread_percent, alert_threshold, "ABOVE"), alert.freq_once_per_bar)

// ============================================================================
// ИНФОРМАЦИОННАЯ ТАБЛИЦА
// ============================================================================

if barstate.islast
    var table stats_table = table.new(position.top_left, 2, 10, bgcolor=color.white, border_width=1)
    
    // Заголовок
    table.cell(stats_table, 0, 0, "Advanced Bid/Ask Stats", text_color=color.black, text_size=size.normal, bgcolor=color.gray)
    table.cell(stats_table, 1, 0, "Value", text_color=color.black, text_size=size.normal, bgcolor=color.gray)
    
    // Основные данные
    table.cell(stats_table, 0, 1, "Volatility Level:", text_color=color.black, text_size=size.small)
    table.cell(stats_table, 1, 1, vol_level, text_color=color.orange, text_size=size.small)
    
    table.cell(stats_table, 0, 2, "Current Spread:", text_color=color.black, text_size=size.small)
    table.cell(stats_table, 1, 2, str.format("{0,number,#.##}%", spread_percent), 
               text_color=f_get_spread_color(spread_percent, spread_ma, spread_std), text_size=size.small)
    
    table.cell(stats_table, 0, 3, "Spread Type:", text_color=color.black, text_size=size.small)
    table.cell(stats_table, 1, 3, spread_type, 
               text_color=f_get_spread_color(spread_percent, spread_ma, spread_std), text_size=size.small)
    
    // Статистика
    table.cell(stats_table, 0, 4, "MA Spread:", text_color=color.black, text_size=size.small)
    table.cell(stats_table, 1, 4, str.format("{0,number,#.##}%", spread_ma), text_color=color.blue, text_size=size.small)
    
    table.cell(stats_table, 0, 5, "Std Deviation:", text_color=color.black, text_size=size.small)
    table.cell(stats_table, 1, 5, str.format("{0,number,#.##}%", spread_std), text_color=color.orange, text_size=size.small)
    
    table.cell(stats_table, 0, 6, "Coefficient of Var:", text_color=color.black, text_size=size.small)
    table.cell(stats_table, 1, 6, str.format("{0,number,#.##}%", spread_cv), text_color=color.purple, text_size=size.small)
    
    // Границы
    table.cell(stats_table, 0, 7, "Upper Band:", text_color=color.black, text_size=size.small)
    table.cell(stats_table, 1, 7, str.format("{0,number,#.##}%", spread_upper), text_color=color.red, text_size=size.small)
    
    table.cell(stats_table, 0, 8, "Lower Band:", text_color=color.black, text_size=size.small)
    table.cell(stats_table, 1, 8, str.format("{0,number,#.##}%", spread_lower), text_color=color.green, text_size=size.small)
    
    // Статус
    table.cell(stats_table, 0, 9, "Anomaly:", text_color=color.black, text_size=size.small)
    table.cell(stats_table, 1, 9, is_anomaly ? "YES" : "NO", 
               text_color=is_anomaly ? color.orange : color.gray, text_size=size.small)

// ============================================================================
// ДОПОЛНИТЕЛЬНЫЕ ИНДИКАТОРЫ
// ============================================================================

// RSI спреда
spread_rsi = ta.rsi(spread_percent, 14)
plot(spread_rsi, "Spread RSI", color=color.purple, display=display.data_window)

// MACD спреда
[macd_line, signal_line, histogram] = ta.macd(spread_percent, 12, 26, 9)
plot(macd_line, "Spread MACD", color=color.blue, display=display.data_window)
plot(signal_line, "Spread Signal", color=color.red, display=display.data_window)
